<?php

namespace Repositories;

use Doctrine\ORM\EntityRepository;

/**
 * MailboxPreference
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class MailboxPreference extends EntityRepository
{
    /**
     * Cache key for loadPrefrencesValuesByAttribyte() - defined so we can clear the cache if we add / edit / delete additional info
     * @var string Cache key for loadPrefrenceValuesByAttribute() - defined so we can clear the cache if we add / edit / delete additional info
     */
    const VALUES_CACHE_KEY = 'ViMbAdmin_Plugin_AdditionalInfo_autocomplete';
    
    /**
     * Loads preferene values by attribute.
     *
     * Loads all prefrences value form all admin accessible mailboxes and return as array [ value1, value2, value3, ...].
     * Use cache for this method.
     *
     * @param string $attribute Attribute name
     * @param \Entities\Admin $admin Admin who request the list
     * @return array
     */
    public function loadPrefrenceValuesByAttribute( $attribute, $admin )
    {
        $qb = $this->getEntityManager()->createQueryBuilder()
                ->select( 'mp.value' )
                ->from( '\\Entities\\MailboxPreference', 'mp' )
                ->where( 'mp.attribute = ?1' )
                ->setParameter( 1, $attribute );
                
        if( !$admin->isSuper() )
        	$qb->join( 'mp.Mailbox', 'm' )
        	    ->join( 'm.Domain', 'd' )
	            ->join( 'd.DomainToAdmin', 'd2a' )
	            ->where( 'd2a.Admin = ?1' )
	            ->setParameter( 1, $admin );
                
        $data = $qb->getQuery()
            ->useResultCache( true, 3600, self::VALUES_CACHE_KEY . '_' . $admin->getId() . '_' . $attribute )
            ->getScalarResult();
            
        $values = [];
        foreach( $data as $value )
            if( !in_array( $value['value'], $values ) )
                $values[] = $value['value'];
        
        return $values;
    }
    
}
