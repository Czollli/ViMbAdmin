<?php

/**
 * BaseAlias
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $address
 * @property string $goto
 * @property string $domain
 * @property boolean $active
 * @property Domain $Domain
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7691 2011-02-04 15:43:29Z jwage $
 */
abstract class BaseAlias extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('alias');
        $this->hasColumn('id', 'integer', null, array(
             'primary' => true,
             'type' => 'integer',
             'autoincrement' => true,
             ));
        $this->hasColumn('address', 'string', 255, array(
             'unique' => true,
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('goto', 'string', 65536, array(
             'type' => 'string',
             'notnull' => true,
             'length' => '65536',
             ));
        $this->hasColumn('domain', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => '255',
             ));
        $this->hasColumn('active', 'boolean', null, array(
             'default' => 1,
             'type' => 'boolean',
             'notnull' => true,
             ));

        $this->option('collate', 'utf8_general_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Domain', array(
             'local' => 'domain',
             'foreign' => 'domain'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             'created' => 
             array(
              'name' => 'created',
              'type' => 'timestamp',
             ),
             'updated' => 
             array(
              'name' => 'modified',
              'type' => 'timestamp',
             ),
             ));
        $this->actAs($timestampable0);
    }
}